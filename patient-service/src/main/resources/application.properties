# Sets the name of the Spring Boot application
# Used in service discovery (like Eureka), logging tags, metrics, etc.
spring.application.name=patient-service

# =============================
# H2 Database Configuration
# =============================

# Enables access to the H2 database web console at /h2-console
spring.h2.console.path=/h2-console

# Configures the JDBC URL for an in-memory H2 database named "testdb"
spring.datasource.url=jdbc:h2:mem:testdb

# Specifies the JDBC driver class for H2 database
spring.datasource.driver-class-name=org.h2.Driver

# Database credentials for accessing H2 (not enforced in-memory unless used with security)
spring.datasource.username=admin_viewer
spring.datasource.password=secretpass

# Tells Hibernate to use the H2 dialect for generating SQL
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Automatically updates the DB schema to match JPA entity definitions on startup
# Values: none | validate | update | create | create-drop
spring.jpa.hibernate.ddl-auto=update

# Ensures SQL scripts like schema.sql and data.sql are always executed at startup
spring.sql.init.mode=always

# =============================
# Server Configuration
# =============================

# Runs the application on port 4000
server.port=4000

# =============================
# Logging Configuration
# TRACE  ? - Fine-grained debugging info (everything)
# DEBUG  ?? - Debugging details
# INFO   ?? - High-level app flow, startup info
# WARN   ?? - Something unexpected, but app still runs
# ERROR  ? - Serious issue, likely breaking functionality
# OFF    ? - No logging
# =============================

# Sets the root logging level
# Can be overridden per package like logging.level.org.springframework=debug
logging.level.root=INFO
